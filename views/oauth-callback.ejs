<!-- views/oauth-callback.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enter Email</title>
    <link id="favicon" rel="icon" href="https://cdn.glitch.global/887fed5c-3c1b-472d-8fdc-c2a3bad1fe27/oillamp(powderblue).svg?v=1709088268120" type="image/x-icon">
    <link rel="stylesheet" type="text/css" href="https://torango-exporter.glitch.me/public/styles.css" />
  <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LRS5LVL8ED"></script>
  
</head>
<body>
    <header>
        <h1>List of Articles</h1>
    </header>
    <main>
        <section>
            <table>
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Created At</th>
                        <th>Edited At</th>
                        <th>Revise</th>
                    </tr>
                </thead>
                <tbody id="articles-body">
                    <% articles.forEach(article => { %>
                        <tr>
                            <td><a href="<%= article.html_url %>"><%= article.title %></a></td>
                            <td><%= new Date(article.created_at).toLocaleString() %></td>
                            <td><%= new Date(article.edited_at).toLocaleString() %></td>
                            <td><button>Revise</button></td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </section>
                <div id="pagination-buttons">
                <button id="prev-button" disabled>Previous</button>
                <span id="page-num">Page 1</span>
                <button id="next-button">Next</button>
            </div>
    </main>
      <script>
        document.addEventListener("DOMContentLoaded", async function () {
    let pageNum = 1;
    const pageSize = 10; // Number of articles per page
    const prevButton = document.getElementById("prev-button");
    const nextButton = document.getElementById("next-button");
    const pageNumSpan = document.getElementById("page-num");
    const articlesBody = document.getElementById("articles-body");

    // Function to fetch articles based on page number
    async function fetchArticles(pageNum) {
        try {
            const response = await fetch(`/zendesk/articles?pageNum=${pageNum}`);
            const data = await response.json();
            const articles = data.articles;
            renderArticles(articles);
            updatePaginationUI(data);
          console.log(response);
        } catch (error) {
            console.error("Error fetching articles:", error);
        }
    }

    // Function to handle previous button click
    prevButton.addEventListener("click", async function () {
        if (pageNum > 1) {
            pageNum--;
            await fetchArticles(pageNum);
        }
    });

    // Function to handle next button click
    nextButton.addEventListener("click", async function () {
        pageNum++;
        await fetchArticles(pageNum);
    });

    // Function to render articles in the UI
function renderArticles(articles) {
    const tbody = document.querySelector("tbody"); // Target the tbody element
    tbody.innerHTML = ""; // Clear existing articles
    articles.forEach(article => {
        const row = document.createElement("tr");
        row.innerHTML = `
            <td><a href="${article.html_url}">${article.title}</a></td>
            <td>${new Date(article.created_at).toLocaleString()}</td>
            <td>${new Date(article.edited_at).toLocaleString()}</td>
            <td><button>Revise</button></td>
        `;
        tbody.appendChild(row);
    });
}

    // Function to update pagination UI
    function updatePaginationUI(data) {
        pageNumSpan.textContent = `Page ${pageNum}`;
        prevButton.disabled = !data.links.prev; // Disable prev button if there's no previous page
        nextButton.disabled = !data.links.next; // Disable next button if there's no next page
    }
});
      </script>
</body>
</html>
