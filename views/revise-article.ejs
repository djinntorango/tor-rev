<!-- views/oauth-callback.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enter Email</title>
    <link id="favicon" rel="icon" href="https://cdn.glitch.global/887fed5c-3c1b-472d-8fdc-c2a3bad1fe27/oillamp(powderblue).svg?v=1709088268120" type="image/x-icon">
    <link rel="stylesheet" type="text/css" href="https://torango-revise.glitch.me/public/styles.css" />

    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <!-- Quill CSS -->

    <style>
    /* styles.css */
    .art-card {
        width: 60dvh;
        height: 60dvh;
        background-color: white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        transition: overflow 0.2s;
    }
      .art-display {
        border: 1px solid black;
        padding: 20px;
        overflow: auto;
      }

.art-display::-webkit-scrollbar,
.ql-editor::-webkit-scrollbar,
.dropdown-content::-webkit-scrollbar {
    width: 10px;
}

.art-display::-webkit-scrollbar-track,
.ql-editor::-webkit-scrollbar-track,
.dropdown-content::-webkit-scrollbar-track {
    background: #f1f1f1;
}

.art-display::-webkit-scrollbar-thumb,
.ql-editor::-webkit-scrollbar-thumb,
.dropdown-content::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 10px;
}

.art-display::-webkit-scrollbar-thumb:hover,
.ql-editor::-webkit-scrollbar-thumb:hover,
.dropdown-content::-webkit-scrollbar-thumb:hover {
    background: #555;
}


    .main {
        margin: 2% 5%;
    }
    .art-card img {
        max-width: 100%; /* Ensure images don't exceed the width of their container */
        height: auto; /* Maintain aspect ratio */
        display: block; /* Ensure images are displayed as blocks */
        margin: 0 auto; /* Center align images */
        margin-bottom: 10px; /* Add some bottom margin for spacing */
    }
    .sbs {
        display: flex;
        justify-content: space-between;
    }
    .prompt-box {
        margin-top: 20px;
    }

    .prompt-input {
        width: 100%;
        padding: 10px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
    }
    input {
        width: 100%;
        height: 50px; /* Initial height */
        padding: 8px;
        border: none;
        resize: vertical; /* Allow vertical resizing */
    }
    #article-prompt-submit, #revision-prompt-submit {
        margin-top: 10px;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        width: 100%;
    }

    #article-prompt-submit:hover, #revision-prompt-submit:hover {
        background-color: #0056b3;
    }
    #editor:focus-visible {
        outline: none;
    }

    .ql-container, .ql-editor .ql-font-serif, .ql-editor .ql-font-monospace, .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before, .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before, .ql-toolbar.ql-snow {
      font-family: inherit !important;
      }
      .ql-container.ql-snow {
        height: 91%;
      }
      #copy-html-button {
        font-size: 60%;
        background: #bdc9ff;
        max-height: 30px;
      }
      #revision-title {
        display: flex;
        justify-content: space-between;  
        align-items: center;
      }
      .toolbar {
        margin: 0 5%;
      }
      
      .dropdown {
    position: relative;
    display: inline-block;
}

.dropbtn {
    background-color: #3498db;
    color: white;
    padding: 10px;
    font-size: 16px;
    border: none;
    cursor: pointer;
}

.dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
    z-index: 1;
    max-height: 70dvh;
    overflow: auto;
}

.dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
}

.dropdown-content a:hover {
    background-color: #ddd;
}

.show {
    display: block;
}
    </style>
</head>
<body>
<header>
    <div class="toolbar">
        <button class="dropbtn" id="translateBtn">Translate</button>
          <div class="dropdown-content" id="languageDropdown">
              <a href="#" data-lang="ar">Arabic</a>
              <a href="#" data-lang="bn">Bengali</a>
              <a href="#" data-lang="bg">Bulgarian</a>
              <a href="#" data-lang="ca">Catalan</a>
              <a href="#" data-lang="zh">Chinese (Simplified)</a>
              <a href="#" data-lang="cs">Czech</a>
              <a href="#" data-lang="da">Danish</a>
              <a href="#" data-lang="nl">Dutch</a>
              <a href="#" data-lang="et">Estonian</a>
              <a href="#" data-lang="fi">Finnish</a>
              <a href="#" data-lang="fr">French</a>
              <a href="#" data-lang="de">German</a>
              <a href="#" data-lang="el">Greek</a>
              <a href="#" data-lang="gu">Gujarati</a>
              <a href="#" data-lang="he">Hebrew</a>
              <a href="#" data-lang="hi">Hindi</a>
              <a href="#" data-lang="hu">Hungarian</a>
              <a href="#" data-lang="id">Indonesian</a>
              <a href="#" data-lang="it">Italian</a>
              <a href="#" data-lang="ja">Japanese</a>
              <a href="#" data-lang="ko">Korean</a>
              <a href="#" data-lang="lv">Latvian</a>
              <a href="#" data-lang="lt">Lithuanian</a>
              <a href="#" data-lang="ms">Malay</a>
              <a href="#" data-lang="no">Norwegian</a>
              <a href="#" data-lang="fa">Persian</a>
              <a href="#" data-lang="pl">Polish</a>
              <a href="#" data-lang="pt">Portuguese</a>
              <a href="#" data-lang="pa">Punjabi</a>
              <a href="#" data-lang="ro">Romanian</a>
              <a href="#" data-lang="ru">Russian</a>
              <a href="#" data-lang="sr">Serbian</a>
              <a href="#" data-lang="sk">Slovak</a>
              <a href="#" data-lang="sl">Slovenian</a>
              <a href="#" data-lang="es">Spanish</a>
              <a href="#" data-lang="sv">Swedish</a>
              <a href="#" data-lang="tl">Tagalog</a>
              <a href="#" data-lang="ta">Tamil</a>
              <a href="#" data-lang="te">Telugu</a>
              <a href="#" data-lang="th">Thai</a>
              <a href="#" data-lang="tr">Turkish</a>
              <a href="#" data-lang="uk">Ukrainian</a>
              <a href="#" data-lang="ur">Urdu</a>
              <a href="#" data-lang="vi">Vietnamese</a>
          </div>
        <button id="exportBtn">Export</button>
    </div>
</header>

<section class="main">
    <div class="sbs">
        <section>
            <h2><%= article.title %></h2>
            <section class="art-card art-display">
                <div>
                    <p id="orig" data-lang=<%= article.locale %>><%- article.body %></p>
                </div>
            </section>
        </section>
        <section>
          <div id="revision-title">
              <h2>Revision</h2>
              <button id="copy-html-button">Copy</button>
            </div>
            <section class="art-card">
                <div id="editor" contenteditable="true">                  
                    <div>
                        <p><%- article.body %></p>
                    </div>
                </div>
                <div id="loading-animation" style="display: none;">Fetching response...</div>
            </section>
        </section>
    </div>
    <div class="prompt-box">
        <label for="revision-prompt">Enter your prompt:</label><br>
        <input type="text" id="revision-prompt" name="revision-prompt">
        <button id="revision-prompt-submit">Submit</button>
    </div>
</section>

<!-- Quill JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/quill@2.0.1/dist/quill.js"></script>
<script>
    // Initialize Quill
    var quill = new Quill('#editor', {
        theme: 'snow' // Specify theme (snow, bubble, etc.)
    });
  
    // Handle prompt submission
    document.getElementById('revision-prompt-submit').addEventListener('click', async () => {
        // Show loading animation
        document.getElementById('loading-animation').style.display = 'block';
        document.getElementById('editor').style.display = 'none';
        const articleBody = document.querySelector('.art-display div').innerHTML; // Get article body
        const userPrompt = document.getElementById('revision-prompt').value.trim(); // Get user prompt

        // Send data to server
        const response = await fetch('/submit-prompt', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ articleBody, userPrompt })
        });

        // Handle response
        const data = await response.json();
        console.log(data); // Log or display the AI response

        const revisedArticleBodyHTML = data.data; // Assuming data.data contains the response HTML

        // Update the Revision article body with the response from OpenAI
        const editorElement = document.querySelector('.art-card #editor div');
        editorElement.innerHTML = revisedArticleBodyHTML;

        // Hide loading animation
        document.getElementById('loading-animation').style.display = 'none';
        document.getElementById('editor').style.display = 'block';
    });
  
  //Copy button
  document.getElementById('copy-html-button').addEventListener('click', function() {
    const editorElement = document.querySelector('.art-card #editor div');
    const revisedArticleBodyHTML = editorElement.innerHTML;
    
    // Copy HTML content to clipboard
    navigator.clipboard.writeText(revisedArticleBodyHTML)
        .then(() => {
            alert('HTML content copied to clipboard!');
        })
        .catch((error) => {
            console.error('Error copying HTML content to clipboard:', error);
            alert('Failed to copy HTML content to clipboard. Please try again.');
        });
});
  
  
  // Get the dropdown button and dropdown content
var dropdownBtn = document.getElementById("translateBtn");
var dropdownContent = document.getElementById("languageDropdown");

// Add click event listener to dropdown button
dropdownBtn.addEventListener("click", function() {
    // Toggle showing/hiding the dropdown content
    dropdownContent.classList.toggle("show");
});

// Add click event listeners to language options
var languageOptions = document.querySelectorAll("#languageDropdown a");
languageOptions.forEach(function(option) {
    option.addEventListener("click", function(event) {
        // Prevent default link behavior
        event.preventDefault();
        
        // Get the selected language from the data-lang attribute
        var selectedLang = option.getAttribute("data-lang");
        
        // Call a function to handle translation based on selected language
        translate(selectedLang);
        
        // Hide the dropdown content after selection
        dropdownContent.classList.remove("show");
    });
});

// Function to handle translation based on selected language
function translate(language) {

    document.getElementById("revision-prompt").value = "Translate to " + language;

}

</script>
</body>
</html>
